[{"C:\\Users\\USER\\cannon-app\\src\\index.jsx":"1","C:\\Users\\USER\\cannon-app\\src\\reducers\\cannon-reducer.js":"2","C:\\Users\\USER\\cannon-app\\src\\config.js":"3","C:\\Users\\USER\\cannon-app\\src\\actions\\types.js":"4","C:\\Users\\USER\\cannon-app\\src\\actions\\cannon-action.js":"5","C:\\Users\\USER\\cannon-app\\src\\reducers\\index.js":"6","C:\\Users\\USER\\cannon-app\\src\\components\\Home.jsx":"7","C:\\Users\\USER\\cannon-app\\src\\components\\cannon\\cannonIndex.jsx":"8","C:\\Users\\USER\\cannon-app\\src\\components\\cannon\\cannonTabView.jsx":"9","C:\\Users\\USER\\cannon-app\\src\\components\\cannon\\cannonStore.jsx":"10","C:\\Users\\USER\\cannon-app\\src\\components\\cannon\\cannonProduct.jsx":"11","C:\\Users\\USER\\cannon-app\\src\\components\\cannon\\cannonDrop.jsx":"12","D:\\interview-app\\src\\index.js":"13","D:\\interview-app\\src\\Components\\SignUp.jsx":"14","D:\\interview-app\\src\\reducers\\index.js":"15","D:\\interview-app\\src\\actions\\user_action.js":"16","D:\\interview-app\\src\\reducers\\user_reducer.js":"17","D:\\interview-app\\src\\config.js":"18","D:\\interview-app\\src\\Components\\SignIn.jsx":"19","D:\\interview-app\\src\\Components\\page.jsx":"20","D:\\interview-app\\src\\actions\\Type.js":"21"},{"size":691,"mtime":1607667341879,"results":"22","hashOfConfig":"23"},{"size":1640,"mtime":1609074361464,"results":"24","hashOfConfig":"23"},{"size":435,"mtime":1607598087587,"results":"25","hashOfConfig":"23"},{"size":1076,"mtime":1606745429671,"results":"26","hashOfConfig":"23"},{"size":3241,"mtime":1609074058401,"results":"27","hashOfConfig":"23"},{"size":192,"mtime":1606745422798,"results":"28","hashOfConfig":"23"},{"size":3654,"mtime":1606903577187,"results":"29","hashOfConfig":"23"},{"size":3107,"mtime":1609928252806,"results":"30","hashOfConfig":"23"},{"size":1373,"mtime":1607441063035,"results":"31","hashOfConfig":"23"},{"size":23304,"mtime":1608274392679,"results":"32","hashOfConfig":"23"},{"size":9318,"mtime":1608979077541,"results":"33","hashOfConfig":"23"},{"size":8605,"mtime":1609163179944,"results":"34","hashOfConfig":"23"},{"size":828,"mtime":1616694917784,"results":"35","hashOfConfig":"36"},{"size":4098,"mtime":1616692548512,"results":"37","hashOfConfig":"36"},{"size":184,"mtime":1616648852100,"results":"38","hashOfConfig":"36"},{"size":2565,"mtime":1616764041267,"results":"39","hashOfConfig":"36"},{"size":1796,"mtime":1616770453211,"results":"40","hashOfConfig":"36"},{"size":433,"mtime":1616647934950,"results":"41","hashOfConfig":"36"},{"size":3296,"mtime":1616694031236,"results":"42","hashOfConfig":"36"},{"size":7560,"mtime":1616794073667,"results":"43","hashOfConfig":"36"},{"size":663,"mtime":1616746830158,"results":"44","hashOfConfig":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"h7ydem",{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"sih468",{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"81"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\USER\\cannon-app\\src\\index.jsx",[],["100","101"],"C:\\Users\\USER\\cannon-app\\src\\reducers\\cannon-reducer.js",["102","103"],"import {\r\n  FETCH_CANNON_TEMPLATE_SUCCESS_ACTION,\r\n  FETCH_CANNON_TEMPLATE_FAILURE_ACTION,\r\n  FETCH_CANNON_STORE_SUCCESS_ACTION,\r\n  FETCH_CANNON_STORE_FAILURE_ACTION,\r\n  FETCH_AUDITORS_SUCCESS_ACTION,\r\n  FETCH_AUDITORS_FAILURE_ACTION,\r\n  FETCH_CANNON_PRODUCT_SUCCESS_ACTION,\r\n  FETCH_CANNON_PRODUCT_FAILURE_ACTION\r\n} from \"../actions/types\";\r\n\r\nconst CANNON_STATE = {};\r\n\r\nexport default function (state = CANNON_STATE, action) {\r\n  state = Object.assign({}, state, {});\r\n  switch (action.type) {\r\n    case FETCH_CANNON_TEMPLATE_SUCCESS_ACTION:\r\n      state.cannonTemplate = action.payload[0];\r\n      state.cannonTemplateError = false;\r\n      return state;\r\n    case FETCH_CANNON_TEMPLATE_FAILURE_ACTION:\r\n      state.cannonTemplateError = true;\r\n      return state;\r\n    case FETCH_CANNON_STORE_SUCCESS_ACTION:\r\n      state.cannonStoreList = action.payload.store;\r\n      state.cannonStoreError = false;\r\n      return state;\r\n    case FETCH_CANNON_STORE_FAILURE_ACTION:\r\n      state.cannonStoreError = true;\r\n      return state;\r\n    case FETCH_CANNON_PRODUCT_SUCCESS_ACTION:\r\n      console.log(action.payload,\"products\")\r\n      state.cannonProducts = action.payload.Product;\r\n      state.fetchCannonProductError = false;\r\n      return state;\r\n    case FETCH_CANNON_PRODUCT_FAILURE_ACTION:\r\n      state.fetchCannonProductError = true;\r\n      return state;\r\n    case FETCH_AUDITORS_SUCCESS_ACTION:\r\n      state.cannonAuditors = action.payload.List;\r\n      state.fetchAuditorsError = false;\r\n      return state;\r\n    case FETCH_AUDITORS_FAILURE_ACTION:\r\n      state.fetchAuditorsError = true;\r\n      return state;\r\n\r\n  }\r\n  return state;\r\n}\r\n",["104","105"],"C:\\Users\\USER\\cannon-app\\src\\config.js",[],"C:\\Users\\USER\\cannon-app\\src\\actions\\types.js",[],"C:\\Users\\USER\\cannon-app\\src\\actions\\cannon-action.js",["106"],"import axios from 'axios';\r\nimport * as FileSaver from 'file-saver';\r\n// import { template } from 'underscore';\r\nimport * as types from './types';\r\n\r\nexport const fetchCannonTemplatesAction = () => {\r\n    console.log(\"call coming\")\r\n    return function(dispatch) {\r\n        axios\r\n            .get(types.API_URL + '/templates')\r\n            .then(function(response) {\r\n                \r\n                dispatch({\r\n                    type: types.FETCH_CANNON_TEMPLATE_SUCCESS_ACTION,\r\n                    payload: response.data\r\n                });\r\n            })\r\n            .catch(function(error) {\r\n                dispatch({\r\n                    type: types.FETCH_CANNON_TEMPLATE_FAILURE_ACTION,\r\n                    payload: error\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\nexport const fetchCannonStoreAction = () => {\r\n    return function(dispatch) {\r\n        axios\r\n            .get(types.API_URL + '/cannon_master')\r\n            .then(function(response) {\r\n                dispatch({\r\n                    type: types.FETCH_CANNON_STORE_SUCCESS_ACTION,\r\n                    payload: response.data\r\n                });\r\n                \r\n            })\r\n            .catch(function(error) {\r\n                dispatch({\r\n                    type: types.FETCH_CANNON_STORE_FAILURE_ACTION,\r\n                    payload: error\r\n                });\r\n                \r\n            });\r\n    };\r\n};\r\n\r\nexport const fetchCannonProductAction = () => {\r\n    \r\n    return function(dispatch) {\r\n        axios\r\n            .get(types.API_URL + '/products')\r\n            .then(function(response) {\r\n                \r\n                dispatch({\r\n                    type: types.FETCH_CANNON_PRODUCT_SUCCESS_ACTION,\r\n                    payload: response.data\r\n                });\r\n                \r\n            })\r\n            .catch(function(error) {\r\n                dispatch({\r\n                    type: types.FETCH_CANNON_PRODUCT_FAILURE_ACTION,\r\n                    payload: error\r\n                });\r\n                \r\n            });\r\n    };\r\n};\r\nexport const fetchAuditorsAction = () => {\r\n    \r\n    return function(dispatch) {\r\n        axios\r\n            .get(types.API_URL + '/list')\r\n            .then(function(response) {\r\n                \r\n                dispatch({\r\n                    type: types.FETCH_AUDITORS_SUCCESS_ACTION,\r\n                    payload: response.data\r\n                });\r\n            })\r\n            .catch(function(error) {\r\n                dispatch({\r\n                    type: types.FETCH_AUDITORS_FAILURE_ACTION,\r\n                    payload: error\r\n                });\r\n            });\r\n    };\r\n};\r\nexport const AssignCannonAuditsAction = ({data,onSuccess,onFailure}) => {\r\n    return function (dispatch) {\r\n      axios\r\n        .post(types.API_URL + '/auditor/v1/canon/assignAudits',data)\r\n        .then(function (response) {\r\n          dispatch({\r\n            type: types.ASSIGN_CANNON_AUDITS_SUCCESS_ACTION,\r\n            payload: response.data\r\n          });\r\n          onSuccess()\r\n        })\r\n        .catch(function (error) {\r\n          dispatch({\r\n            type: types.ASSIGN_CANNON_AUDITS_FAILURE_ACTION,\r\n            payload: error\r\n          });\r\n        });\r\n    };\r\n  };\r\n",["107","108"],"C:\\Users\\USER\\cannon-app\\src\\reducers\\index.js",[],["109","110"],"C:\\Users\\USER\\cannon-app\\src\\components\\Home.jsx",["111","112","113","114"],"import React from 'react'\r\nimport { Header, Icon, Image, Menu, Segment, Sidebar, Dropdown, Checkbox } from 'semantic-ui-react'\r\nimport CannonIndex from './cannon/cannonIndex.jsx'\r\n\r\nexport default class Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: true,\r\n      menu: \"cannon\",\r\n       message:\"\",\r\n    };\r\n  }\r\ntogglebar=(e)=>{\r\n  this.setState({\r\n    visible:!this.state.visible\r\n  })\r\n\r\n}\r\nhandleClick = (e) => {\r\nthis.setState({\r\nmessage:\"CANNON\"\r\n});\r\n}\r\nhandleClick2 = (e) => {\r\n  this.setState({\r\n  message:\"GAMEPAD\"\r\n  });\r\n  }\r\n\r\n// display =()=>{\r\n//   var message =this.state.message;\r\n//   message.map((top,index)=>{\r\n//     <div key={index}>\r\n//       <p style={{ textAlign:'center' }}><b>{top}</b></p>\r\n//     </div>\r\n//   }\r\n//   )\r\n  \r\n// }\r\n\r\n//   handleItemClick= (e,{name})  => {\r\n//  console.log(name)\r\n//     // this.props.history\r\n//     var messsage =\"hello\"\r\n//     this.setState=({\r\n//       message:messsage,\r\n//     });\r\n//   }\r\n\r\n  render() {\r\n    var activeItem = this.state.menu;\r\n    var pusherStyle = { height: \"100%\", overflow: \"auto\", width: \"85%\" };\r\n    if(!this.state.visible){\r\n      pusherStyle.width =\"100%\"\r\n    }\r\n    return (\r\n      <div style={{height:\"100%\"}}>\r\n        <Segment raised style={{ backgroundColor: \"#fafafa\", height: 60 }}>\r\n          <div style={{ display: \"inline-block\" }}>\r\n            <Icon\r\n              style={{\r\n                display: \"inline-block\",\r\n                cursor: \"pointer\",\r\n                float: \"left\",\r\n                color: \"#606060\",\r\n                marginTop: 4\r\n              }}\r\n              onClick={this.togglebar}\r\n              size=\"big\"\r\n              name=\"bars\"\r\n            />\r\n          </div>\r\n         \r\n        </Segment>\r\n        <Sidebar.Pushable as={Segment}\r\n          style={{\r\n            marginTop: -15,\r\n            display: \"flex\",\r\n            borderRadius: 0,\r\n            height: \"200%\"\r\n          }}>\r\n          <Sidebar\r\n            as={Menu}\r\n            visible={this.state.visible}\r\n            activeIndex=\"0\"\r\n            style={{\r\n              flex:\"0 0 150px\",\r\n              backgroundColor: \"#2c3e50\",\r\n              paddingTop: 30\r\n            }}\r\n            animation=\"slide along\"\r\n            width=\"thin\"\r\n            icon=\"labeled\"\r\n            vertical\r\n            inverted\r\n          >\r\n            <Menu.Item\r\n              name=\"cannon\"\r\n              active={activeItem === \"cannon\"}\r\n              color=\"teal\"\r\n              onClick={this.handleClick}\r\n              style={{ marginTop: 5 }}\r\n            >\r\n              <Icon name=\"camera\" />\r\n            Cannon\r\n         </Menu.Item>\r\n         <Menu.Item\r\n              name=\"gamepad\"\r\n              active={activeItem === \"gamepad\"}\r\n              color=\"teal\"\r\n              onClick={this.handleClick2}\r\n              style={{ marginTop: 5 }}\r\n            >\r\n              <Icon name=\"gamepad\" />\r\n            Gamepad\r\n         </Menu.Item>\r\n          </Sidebar>\r\n\r\n          <Sidebar.Pusher  style={pusherStyle} >\r\n\r\n            <Segment basic\r\n                style={{\r\n                height: \"100%\",\r\n                display: \"flex\",\r\n                padding: \"10px 0px 0px 0px\"\r\n              }}  \r\n            >\r\n            {/* <div style={{ paddingLeft: 650,paddingBottom:200, flex: \"0 0 450px\" }}>\r\n           <p style={{ textAlign:'center' }}> <b>{this.state.message}</b></p> \r\n           </div> */}\r\n              {activeItem === \"cannon\" && <CannonIndex />}\r\n            </Segment>\r\n          </Sidebar.Pusher>\r\n        </Sidebar.Pushable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","C:\\Users\\USER\\cannon-app\\src\\components\\cannon\\cannonIndex.jsx",[],"C:\\Users\\USER\\cannon-app\\src\\components\\cannon\\cannonTabView.jsx",[],"C:\\Users\\USER\\cannon-app\\src\\components\\cannon\\cannonStore.jsx",["115","116","117","118","119","120","121"],"import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table-v6\"\r\nimport 'react-table-v6/react-table.css'\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport {\r\n    Icon,\r\n    Segment,\r\n    Checkbox,\r\n    Button,\r\n    Modal,\r\n    Statistic,\r\n    Grid,\r\n    Dropdown,\r\n    Label,\r\n    Image,\r\n    ModalActions\r\n} from \"semantic-ui-react\";\r\nimport selectTable from \"react-table-6/lib/hoc/selectTable\";\r\nimport CannonProduct from './cannonProduct.jsx';\r\nimport {\r\n    fetchCannonStoreAction,\r\n    fetchCannonProductAction,\r\n    fetchAuditorsAction,\r\n  } from \"../../actions/cannon-action\";\r\n// var TableSelect = require('react-table-select');\r\n// import TableSelect from \"react-select-table\";\r\n// import 'react-select-table/dist/index.css';\r\nvar CheckBoxTable = selectTable(ReactTable);\r\nexport class CannonStore extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedStore: {},\r\n            isStoreView: true,\r\n            Product: true,\r\n            storeId: \"\",\r\n            value: \"Initial Stores\",\r\n            initialAndAssignedStores: [],\r\n            pendingAndCompletedStores: [],\r\n            selectAll: true,\r\n            userSelectionAll: false,\r\n            openAssignModal: false,\r\n            storeList:[],\r\n            storeStatus: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.fetchCannonStoreAction();\r\n       this.setState({\r\n           isStoreView:false,\r\n           value:\"Intial Store\"\r\n       });\r\n        \r\n\r\n    }\r\n    onClose = () => {\r\n        this.props.onClose();\r\n    };\r\n\r\n    static getDerivedStateFromProps(nextProps){\r\n        let data = []\r\n        if(nextProps.cannon.cannonStoreList){\r\n          data.push(nextProps.cannon.cannonStoreList)\r\n        }\r\n        console.log(data,\"----\")\r\n        return{\r\n          storeList:data\r\n        }\r\n      } \r\n\r\n\r\n    IntialTable = () => {\r\n        this.setState({\r\n            isStoreView: false\r\n        });\r\n        this.setState({\r\n            value: \"Initial Stores\"\r\n        });\r\n          var stores = this.state.storeList;\r\n        //  console.log(stores,\"helloooo\")\r\n        var initialAndAssignedStores = [];\r\n            stores.forEach(data => {\r\n                console.log(data[1].status,\"statussss\")\r\n              if (data[1].status === \"Initial\") {\r\n                initialAndAssignedStores.push(data[1]);\r\n              }\r\n            });\r\n          \r\n          this.setState({\r\n            initialAndAssignedStores,\r\n          });\r\n    }\r\n    IntialTable2 = () => {\r\n\r\n        this.setState({\r\n            isStoreView: false\r\n        });\r\n        this.setState({\r\n            value: \"Assigned Stores\"\r\n        });\r\n        var stores =this.state.storeList;\r\n        var initialAndAssignedStores = [];\r\n            stores.forEach(data => {\r\n              if (data[2].status === \"Assigned\") {\r\n                initialAndAssignedStores.push(data[2]);\r\n              }\r\n            });\r\n          this.setState({\r\n            initialAndAssignedStores\r\n          });\r\n    }\r\n    CompletedTable = () => {\r\n\r\n        this.setState({\r\n            isStoreView: true\r\n        });\r\n        this.setState({\r\n            value: \"Inprogress Stores\"\r\n        });\r\n        var stores =this.state.storeList;\r\n        var pendingAndCompletedStores = []; \r\n            stores.forEach(data => {\r\n              if (data[0].status === \"Completed\") {\r\n                pendingAndCompletedStores.push(data[0]);\r\n              }\r\n            });\r\n          \r\n          this.setState({\r\n            pendingAndCompletedStores:pendingAndCompletedStores\r\n          });\r\n    }\r\n    CompletedTable2 = () => {\r\n        this.setState({\r\n            isStoreView: true\r\n        });\r\n        this.setState({\r\n            value: \"Completed Stores\"\r\n        });\r\n        var stores =this.state.storeList;\r\n        var pendingAndCompletedStores = [];\r\n            stores.forEach(data => {\r\n              if (data[0].status === \"Completed\") {\r\n                pendingAndCompletedStores.push(data[0]);\r\n              }\r\n            });\r\n          this.setState({\r\n               pendingAndCompletedStores\r\n          });\r\n    }\r\n\r\n    onProduct = () => {\r\n        this.setState({\r\n            Product: false\r\n        });\r\n    }\r\n\r\n    closeProduct = () => {\r\n        this.setState({\r\n            Product: true\r\n        });\r\n    }\r\n\r\n    Assign = () => {\r\n        this.setState({\r\n            selectAll: false\r\n        })\r\n    }\r\n    AssignOff = () => {\r\n        this.setState({\r\n            selectAll: true\r\n        })\r\n    }\r\n    \r\n\r\n\r\n\r\n    render() {\r\n        var stores =this.props.cannon.cannonStoreList;\r\n       \r\n        var Modallist = [{\r\n            email: \"xxx123@gmail.com\"\r\n        },\r\n        {\r\n            email: \"yyy456@gmail.com\"\r\n        },\r\n        {\r\n            email: \"zzz789@gmail.com\"\r\n        }]\r\n        var columns = [\r\n            {\r\n                Header: \"Region\",\r\n                accessor: \"region\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.region}\r\n                        onClick={this.onProduct}\r\n                    />\r\n            },\r\n            {\r\n                Header: \"State\",\r\n                accessor: \"state\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.state}\r\n                        onClick={this.onProduct}\r\n                    />\r\n            },\r\n            {\r\n                Header: \"City\",\r\n                accessor: \"city\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.city}\r\n                        onClick={this.onProduct}\r\n                    />\r\n            },\r\n            {\r\n                Header: \"CIS Version\",\r\n                accessor: \"cisVersion\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.cisVersion}\r\n                        onClick={this.onProduct}\r\n                    />\r\n            },\r\n            {\r\n                Header: \"Store Name\",\r\n                accessor: \"shipSiteLocation\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.shipSiteLocation}\r\n                        onClick={this.onProduct}\r\n                    />\r\n            }\r\n        ];\r\n        var Assignedcolumns = [\r\n            {\r\n                Header: \"Region\",\r\n                accessor: \"region\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.region}\r\n                    />\r\n            },\r\n            {\r\n                Header: \"State\",\r\n                accessor: \"state\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.state}\r\n                   \r\n                    />\r\n            },\r\n            {\r\n                Header: \"City\",\r\n                accessor: \"city\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.city}\r\n                    \r\n                    />\r\n            },\r\n            {\r\n                Header: \"Assignee\",\r\n                accessor: \"userName\",\r\n                width: 125,\r\n                style: { textAlign: \"left\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.userName}\r\n                    \r\n                    />\r\n            },\r\n            {\r\n                Header: \"CIS Version\",\r\n                accessor: \"cisVersion\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.cisVersion}\r\n                    \r\n                    />\r\n            },\r\n            {\r\n                Header: \"Store Name\",\r\n                accessor: \"shipSiteLocation\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.shipSiteLocation}\r\n                  \r\n                    />\r\n            }\r\n        ];\r\n        var InitialColumn = [\r\n            {\r\n                Header: \"Region\",\r\n                accessor: \"region\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.region}\r\n                    \r\n                    />\r\n            },\r\n            {\r\n                Header: \"State\",\r\n                accessor: \"state\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.state}\r\n                    \r\n                    />\r\n            },\r\n            {\r\n                Header: \"City\",\r\n                accessor: \"city\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.city}\r\n                   \r\n                    />\r\n            },\r\n            {\r\n                Header: \"CIS Version\",\r\n                accessor: \"cisVersion\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.cisVersion}\r\n                   \r\n                    />\r\n            },\r\n\r\n            {\r\n                Header: \"Store Name\",\r\n                accessor: \"shipSiteLocation\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.shipSiteLocation}\r\n                    \r\n                    />\r\n            }\r\n        ];\r\n\r\n        const UserColumn = [\r\n            {\r\n                Header: \"Email Id's\",\r\n                accessor: \"email\",\r\n                style: { textAlign: \"left\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.email}\r\n                    />\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <div style={{ flexGrow: 1, display: \"flex\", flexFlow: \"column\" }}>\r\n                { this.state.Product &&\r\n                    <div>\r\n                        <div style={{ padding: 20, display: \"inline-block\" }}>\r\n                            <Segment\r\n                                onClick={this.onClose}\r\n                                style={{\r\n                                    color: \"#808080\",\r\n                                    float: \"right\",\r\n                                    cursor: \"pointer\",\r\n                                    marginTop: 20,\r\n                                    display: \"inline-block\",\r\n                                    // top:\"15\",\r\n                                    position: \"absolute\",\r\n                                    right: 50\r\n                                }}\r\n                            >\r\n                                <Icon name=\"arrow\" className=\"left large\" color=\"brown\" />\r\n\r\n\r\n                            </Segment>\r\n                            {/* <Segment\r\n                                onClick={this.onProduct}\r\n                                style={{\r\n                                    color: \"#808080\",\r\n                                    float: \"right\",\r\n                                    cursor: \"pointer\",\r\n                                    marginTop: 20,\r\n                                    display: \"inline-block\",\r\n                                    // top:\"15\",\r\n                                    position: \"absolute\",\r\n                                    right: 20\r\n                                }}\r\n                            >\r\n                                <Icon name=\"arrow\" className=\"right large\" color=\"brown\" />\r\n\r\n\r\n                            </Segment> */}\r\n                            {/* <Button >Download Report</Button> */}\r\n\r\n                            <h1\r\n                                style={{\r\n                                    paddingLeft: 30,\r\n                                    color: \"orange\",\r\n                                    display: \"inline-block\"\r\n                                }}\r\n                            >\r\n                                Canon Stores\r\n              </h1>\r\n                            <div style={{ display: \"inline-block\", marginLeft: 30 }}>\r\n                                <Button\r\n\r\n\r\n                                    label={\r\n                                        <Label size=\"medium\" color=\"grey\" style={{ cursor: \"pointer\" }} >\r\n                                            Initial Stores\r\n                                     </Label>\r\n                                    }\r\n                                    value=\"Initial Stores\"\r\n                                    onClick={this.IntialTable}\r\n                                    style={{ marginLeft: 10 }}\r\n                                />\r\n                                <Button\r\n\r\n\r\n                                    label={\r\n                                        <Label\r\n                                            color=\"blue\"\r\n                                            size=\"medium\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n\r\n                                        >\r\n                                            Assigned Stores\r\n                    </Label>\r\n                                    }\r\n                                    value=\"Assigned Stores\"\r\n                                    onClick={this.IntialTable2}\r\n                                    style={{ marginLeft: 10 }}\r\n                                />\r\n                                <Button\r\n\r\n\r\n                                    // label=\"InProgress Stores\"\r\n                                    label={\r\n                                        <Label\r\n                                            color=\"green\"\r\n                                            size=\"medium\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        >\r\n                                            InProgress Stores\r\n                    </Label>\r\n                                    }\r\n                                    value=\"InProgress Stores\"\r\n                                    onClick={this.CompletedTable}\r\n                                    style={{ marginLeft: 10 }}\r\n                                />\r\n                                <Button\r\n\r\n\r\n                                    label={\r\n                                        <Label\r\n                                            color=\"red\"\r\n                                            size=\"medium\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        >\r\n                                            Completed Stores\r\n                    </Label>\r\n                                    }\r\n                                    value=\"Completed Stores\"\r\n                                    onClick={this.CompletedTable2}\r\n                                    style={{ marginLeft: 10 }}\r\n                                />\r\n                            </div>\r\n                            <div style={{ display: \"flex\", marginBottom: 10, marginRight: 10 }}>\r\n                            {this.state.initialAndAssignedStores.length > 0\r\n                                ?<div style={{ marginLeft: \"auto\", order: 1 }}>\r\n                                {this.state.value === \"Initial Stores\" &&\r\n                                    <Button\r\n                                        color=\"teal\" onClick={this.Assign}// style={{ border: \"2px solid teal\" }}\r\n                                    >\r\n                                        Assign Stores\r\n                                </Button>}\r\n                                </div>\r\n                                :null}\r\n                            </div>\r\n                            \r\n                        </div>\r\n\r\n                        {!this.state.selectAll &&\r\n                            <div>\r\n                                <Modal\r\n                                    open={!this.state.selectAll}\r\n                                    onClose={this.AssignOff}\r\n                                    size=\"small\">\r\n                                    <Modal.Content>\r\n                                        <CheckBoxTable\r\n                                            noDataText=\"We couldn't find anything\"\r\n                                            filterable={true}\r\n                                            defaultPageSize={20}\r\n                                            //   defaultFilterMethod={this.searchFilter}\r\n                                            data={Modallist}\r\n                                            columns={UserColumn}\r\n                                            //   className=\"-striped -highlight\"\r\n                                            //   ref={r => (this.checkboxTable = r)}\r\n                                            //   toggleSelection={this.usertoggleSelection}\r\n                                            //   selectAll={this.state.selectAll}\r\n                                            // toggleAll={this.toggleAll}\r\n                                            selectType=\"checkbox\"\r\n                                        // isSelected={this.isUserSelected.bind(this)}\r\n                                        //   getTrProps={this.rowFn}\r\n                                        />\r\n                                    </Modal.Content>\r\n                                    <Modal.Actions>\r\n                                        <Button color=\"red\" onClick={this.AssignOff}>\r\n                                            <Icon name=\"remove\" /> Close\r\n                </Button>\r\n                                    </Modal.Actions>\r\n                                </Modal>\r\n                            </div>}\r\n\r\n\r\n\r\n\r\n\r\n                        <div style={{ display: \"flex\", flexGrow: 1, flexFlow: \"column\" }}>\r\n                        <div>\r\n                            {this.state.isStoreView\r\n                                ? <ReactTable\r\n                                    noDataText=\"We couldn't find anything\"\r\n                                    data={this.state.pendingAndCompletedStores}\r\n                                    columns={\r\n                                        this.state.value === \"Inprogress Stores\" ? columns : this.state.value === \"Completed Stores\" ? columns : []\r\n                                    }\r\n                                    style={{ height: \"85%\", width: \"95%\", marginLeft: 30 }}\r\n\r\n                                    filterable={true}\r\n                                    defaultPageSize={20}\r\n                                    sortable={true}\r\n                                    onClick={this.onProduct}\r\n                                />\r\n                                : <CheckBoxTable\r\n                                    noDataText=\"We couldn't find anything\"\r\n                                    filterable={true}\r\n                                    defaultPageSize={20}\r\n                                    // defaultFilterMethod={this.searchFilter}\r\n                                    data={this.state.initialAndAssignedStores}\r\n                                    columns={\r\n                                        this.state.value === \"Initial Stores\" ? InitialColumn : this.state.value === \"Assigned Stores\" ? Assignedcolumns : []\r\n                                    }\r\n                                    style={{ height: \"85%\", width: \"95%\", marginLeft: 30 }}\r\n                                    sortable={true}\r\n                                    // className=\"-striped -highlight\"\r\n                                    // ref={r => (this.checkboxTable = r)}\r\n                                    // toggleSelection={this.usertoggleSelection}\r\n                                    // selectAll={this.state.selectAll}\r\n                                    // // toggleAll={this.toggleAll}\r\n                                     selectType=\"checkbox\"\r\n                                     \r\n                                // // isSelected={this.isUserSelected.bind(this)}\r\n                                // getTrProps={this.rowFn}\r\n                                />\r\n\r\n                            }\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n                       \r\n                    </div>}\r\n\r\n\r\n\r\n                { !this.state.Product &&\r\n                    <div style={{ flexGrow: 1, display: \"flex\" }}>\r\n                        <CannonProduct onClose={this.closeProduct} />\r\n                    </div>}\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction AuditTableCell(props) {\r\n    function onClick() {\r\n        props.onClick(props.row);\r\n    }\r\n    return (\r\n        <div style={props.style} onClick={onClick} >\r\n            {props.text}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      //reducer props to state\r\n      cannon: state.cannon\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return bindActionCreators(\r\n      {\r\n        fetchCannonProductAction,\r\n        fetchAuditorsAction,\r\n        fetchCannonStoreAction\r\n      },\r\n      dispatch\r\n    );\r\n  };\r\n  \r\n  export default withRouter(\r\n    connect(mapStateToProps, mapDispatchToProps)(CannonStore)\r\n  );","C:\\Users\\USER\\cannon-app\\src\\components\\cannon\\cannonProduct.jsx",["122","123","124","125"],"import React, { Component } from \"react\";\r\nimport {\r\n  Icon,\r\n  Segment,\r\n  Statistic,\r\n  Grid,\r\n  Dropdown,\r\n  Checkbox,\r\n  Button,\r\n  Modal,\r\n  Label,\r\n  Card,\r\n  Form,\r\n  Image\r\n} from \"semantic-ui-react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport {\r\n  fetchCannonProductAction,\r\n} from \"../../actions/cannon-action\";\r\nimport CannonDrop from \"./cannonDrop.jsx\"\r\nexport class CannonProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cannonProducts: [],\r\n      questions: [],\r\n      editMode: false,\r\n      nextMode:true,\r\n      productChoosed: \"\",\r\n      photoTakenDate: \"\",\r\n      photoUrl: \"\",\r\n      openModal: false,\r\n      value: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.fetchCannonProductAction();\r\n  }\r\n  static getDerivedStateFromProps(nextProps) {\r\n    let data = []\r\n    if (nextProps.cannon.cannonProducts) {\r\n      data.push(nextProps.cannon.cannonProducts)\r\n    }\r\n    console.log(data, \"%%%%%%%\")\r\n    return {\r\n      cannonProducts: data\r\n    }\r\n  }\r\n  onDisplay = () => {\r\n    if (this.state.cannonProducts.length !== 0) {\r\n      var Products = this.state.cannonProducts[0];\r\n      let value = Products[0];\r\n      return value !== undefined ? value.productName : \"\"\r\n    } else {\r\n      return\r\n    }\r\n\r\n  }\r\n  onQuestions = () => {\r\n    if (this.state.cannonProducts.length > 0) {\r\n      console.log(\"Clickeddd\")\r\n      var data = this.state.cannonProducts[0];\r\n      let value1 = data[0];\r\n      this.setState({\r\n        questions: value1.questions\r\n      });\r\n    }\r\n    else {\r\n      return\r\n    }\r\n  };\r\n  handleChange = (e, value, type) => {\r\n    var questions = this.state.questions;\r\n    // console.log(questions);\r\n    console.log(e, value, type);\r\n    if (type === \"yes\") {\r\n      questions.forEach(data => {\r\n        if (data.question === value) {\r\n          \r\n          data.isChecked.optionYesChecked = true;\r\n          data.isChecked.optionNoChecked = false;\r\n        }\r\n      });\r\n    } else if (type === \"no\") {\r\n      questions.forEach(data => {\r\n        if (data.question === value) {\r\n    \r\n        \r\n          data.isChecked.optionNoChecked = true;\r\n          data.isChecked.optionYesChecked = false;\r\n        }\r\n      });\r\n    }\r\n    this.setState({\r\n      questions\r\n    });\r\n  };\r\n  edit = () => {\r\n    this.setState({\r\n      editMode: true\r\n    });\r\n  };\r\n  save=()=>{\r\n    this.setState({\r\neditMode:false\r\n    });\r\n  }\r\n  onClose = () => {\r\n    this.props.onClose();\r\n  };\r\n  onNext=()=>{\r\nthis.setState({\r\n  nextMode:false\r\n})\r\n  };\r\n  onBack=()=>{\r\n    this.setState({\r\n      nextMode:true\r\n    })\r\n  };\r\n  render() {\r\n\r\n    return (\r\n    \r\n      <div style={{ flexGrow: 1, display: \"flex\", flexFlow: \"column\" ,width: \"100%\",height:\"100%\",paddingBottom:240}}>\r\n      {this.state.nextMode &&\r\n      <div>\r\n        <div style={{ padding: 50, display: \"inline-block\" }}>\r\n          <Segment\r\n            style={{\r\n              color: \"#808080\",\r\n              float: \"right\",\r\n              cursor: \"pointer\",\r\n              marginTop: 7,\r\n              display: \"inline-block\",\r\n              position: \"absolute\",\r\n              right: 80\r\n            }}\r\n          >\r\n            <Icon name=\"arrow\" className=\"left large\" color=\"brown\" onClick={this.onClose} />\r\n          </Segment>\r\n          <Segment\r\n          style={{color: \"#808080\",\r\n              float: \"right\",\r\n              cursor: \"pointer\",\r\n              marginTop: 7,\r\n              display: \"inline-block\",\r\n              position: \"absolute\",\r\n              right: 20}}>\r\n          <Icon name=\"arrow\" className=\"right large\" color=\"green\" onClick={this.onNext} />\r\n          </Segment>\r\n          \r\n          <h1\r\n            style={{\r\n              marginTop:-10,\r\n              color: \"orange\",\r\n              display: \"inline-block\"\r\n            }}\r\n          >\r\n            {this.onDisplay()}\r\n          </h1>\r\n        </div>\r\n        <div style={{ padding: 50 }}>\r\n          <Grid>\r\n            <Grid.Row>\r\n              <Grid.Column >\r\n                <Button\r\n                  label={\r\n                    <Label size=\"medium\" color=\"green\" style={{ cursor: \"pointer\",marginTop:-10 }} >\r\n                      Products\r\n                     </Label>\r\n                  }\r\n                  value=\"Products\"\r\n                  style={{ marginLeft: 15 }}\r\n                  onClick={this.onQuestions}\r\n                />\r\n              </Grid.Column>\r\n              {this.state.questions.length > 0\r\n                ? <Grid.Column\r\n                    floated=\"right\"\r\n                    style={{ right: 30, marginTop: 25 }}\r\n                  >\r\n                    {this.state.editMode === false &&\r\n                      <Button color=\"teal\" onClick={this.edit}>\r\n                        Edit\r\n                      </Button>}\r\n                    {this.state.editMode === true &&\r\n                      <Button color=\"facebook\" onClick={this.save}>\r\n                        Save\r\n                      </Button>}\r\n                  </Grid.Column>\r\n                : null}\r\n            </Grid.Row>\r\n          </Grid>\r\n        </div>\r\n        {this.state.questions.length > 0\r\n          ? <div style={{ padding: 20 }}>\r\n            <Card style={{ width: \"100%\" }}>\r\n              <Card.Content>\r\n                <Form.Field>\r\n                  <Grid>\r\n                    {this.state.questions.map(data => {\r\n                      return (\r\n                        <Grid.Row>\r\n                          <Grid.Column\r\n                            width={8}\r\n                            style={{ display: \"inline-block\" }}\r\n                          >\r\n                            {data.question}\r\n                            {/* <Button\r\n                    label={\r\n                    <Label size=\"medium\" color=\"red\" style={{ cursor: \"pointer\" }} >\r\n                      questions\r\n                     </Label>\r\n                  }\r\n                    value=\"questions\"\r\n                     onClick={this.handleChange}\r\n                    /> */}\r\n                          </Grid.Column>\r\n                          {data.answerType === \"options\" &&\r\n                            <Grid.Column\r\n                              width={8}\r\n                              style={{ display: \"inline-block\" }}\r\n                            >\r\n                              <div style={{ display: \"inline-block\" }}>\r\n                                <Checkbox\r\n                                  radio\r\n                                  label=\"Yes\"\r\n                                  value=\"yes\"\r\n                                  checked={data.isChecked.optionYesChecked}\r\n                                  disabled={\r\n                                    this.state.editMode === true\r\n                                      ? false\r\n                                      : true\r\n                                  }\r\n                                  onChange={() => {\r\n                                    this.handleChange(\r\n                                      data.isChecked.optionYesChecked,\r\n                                      data.question,\r\n                                      \"yes\"\r\n                                    );\r\n                                  }}\r\n\r\n                                />\r\n                              </div>\r\n                              <div style={{ display: \"inline-block\", marginLeft: 30 }}>\r\n                                <Checkbox\r\n                                  radio\r\n                                  label=\"No\"\r\n                                  value=\"no\"\r\n                                  checked={data.isChecked.optionNoChecked}\r\n                                  disabled={\r\n                                    this.state.editMode === true\r\n                                      ? false\r\n                                      : true\r\n                                  }\r\n                                  onChange={() => {\r\n                                    this.handleChange(\r\n                                      data.isChecked.optionNoChecked,\r\n                                      data.question,\r\n                                      \"no\"\r\n                                    );\r\n                                  }}\r\n\r\n                                />\r\n                              </div>\r\n\r\n                            </Grid.Column>}\r\n                        </Grid.Row>\r\n                      );\r\n                    })}\r\n                  </Grid>\r\n                </Form.Field>\r\n              </Card.Content>\r\n            </Card>\r\n          </div>\r\n          : null}\r\n          </div>}\r\n          {!this.state.nextMode &&\r\n          <div>\r\n            <CannonDrop onClose={this.onBack} />\r\n          </div>\r\n          \r\n          }\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    //reducer props to state\r\n    cannon: state.cannon\r\n  };\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      fetchCannonProductAction\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(CannonProduct)\r\n);","C:\\Users\\USER\\cannon-app\\src\\components\\cannon\\cannonDrop.jsx",["126","127","128","129","130"],"import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table-v6\"\r\nimport 'react-table-v6/react-table.css'\r\nimport {\r\n    Grid,\r\n    Dropdown,\r\n    Checkbox,\r\n    Button,\r\n    Segment,\r\n    Icon,\r\n    Label\r\n\r\n} from \"semantic-ui-react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport {\r\n    fetchAuditorsAction,\r\n} from \"../../actions/cannon-action\";\r\nexport class CannonDrop extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={  \r\n            list:[],\r\n            wholelist:[],\r\n            selectedRegion:\"\",\r\n            selectedState:\"\"\r\n        }\r\n    };\r\n    componentDidMount(){\r\n        this.props.fetchAuditorsAction();\r\n    }\r\n    static getDerivedStateFromProps(nextProps){\r\n        let data = []\r\n        if(nextProps.cannon.cannonAuditors){\r\n          data.push(nextProps.cannon.cannonAuditors)\r\n        }\r\n        console.log(data,\"----\")\r\n        return{\r\n          list:data\r\n        }\r\n      } \r\nonClose =()=>{\r\n    this.props.onClose();\r\n};\r\nonRegionSelected=(e,Combo)=>{\r\n    console.log(Combo.value,\"regionnnnn\");\r\n    this.setState({\r\nselectedRegion:Combo.value,\r\nselectedState:\"\"\r\n    });\r\n\r\n}\r\nonStateSelected=(e,Combo)=>{\r\n    console.log(Combo.value,\"stateeeeeee\");\r\nthis.setState({\r\n    selectedState:Combo.value\r\n});\r\n}\r\nremoveDuplicates = (e) => { \r\n\r\n    let newArray = []; \r\n      \r\n    // Declare an empty object \r\n    let UniqueObject = {}; \r\n      \r\n    // Loop for the array elements \r\n    for (let i in e) { \r\n  \r\n        // Extract the title \r\n        let objTitle = e[i]['text']; \r\n  \r\n        // Use the title as the index \r\n        UniqueObject[objTitle] = e[i]; \r\n    } \r\n      \r\n    // Loop to push unique object into array \r\n    for (let i in UniqueObject) { \r\n        newArray.push(UniqueObject[i]); \r\n    } \r\n      \r\n    return newArray; \r\n  } \r\n  \r\n    render() {\r\n        var regionlist =[];\r\n        var statelist=[];\r\n        if(this.props.cannon.cannonAuditors !== undefined){\r\nvar regiondata = this.props.cannon.cannonAuditors;\r\nregiondata.map((e)=>{\r\nregionlist.push({text:e.region,value:e.region});\r\nstatelist.push({text:e.state,value:e.state})\r\n\r\n})\r\n };\r\n var regions;\r\n if(regionlist.length>0){\r\nregions=this.removeDuplicates(regionlist)\r\n }\r\n var states;\r\n if(statelist.length>0){\r\n     states=this.removeDuplicates(statelist)\r\n }\r\n \r\n\r\n        // var data=[{\r\n        //     region:\"South\",\r\n        //     state:\"tamilnadu\",\r\n        //     city:\"coastal\",\r\n        //     cisVersion:12334,\r\n        //     shipSiteLocation:\"1,pakkastreet,Nigga\"\r\n        // }]\r\n        var columns=[{\r\n            \r\n                Header: \"Region\",\r\n                accessor: \"region\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.region}\r\n                    \r\n                    />\r\n            },\r\n            {\r\n                Header: \"State\",\r\n                accessor: \"state\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.state}\r\n                    \r\n                    />\r\n            },\r\n            {\r\n                Header: \"City\",\r\n                accessor: \"city\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.city}\r\n                   \r\n                    />\r\n            },\r\n            {\r\n                Header: \"CIS Version\",\r\n                accessor: \"cisVersion\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.cisVersion}\r\n                   \r\n                    />\r\n            },\r\n\r\n            {\r\n                Header: \"Store Name\",\r\n                accessor: \"shipSiteLocation\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.shipSiteLocation}\r\n                    \r\n                    />\r\n            }\r\n    \r\n    ]\r\n\r\n        return (\r\n            <div style={{ flexGrow: 1, display: \"flex\", flexFlow: \"column\", width: \"100%\", height: \"100%\" }}>\r\n                <div style={{ padding: 50 }}>\r\n                    <Grid>\r\n                        <Grid.Row>\r\n                            <Grid.Column width={4}>\r\n                                <a\r\n                                    className=\"ui teal left ribbon label\"\r\n                                    style={{ marginLeft: 15 }}\r\n                                >\r\n                                    Region\r\n                </a>\r\n                                <Dropdown\r\n                                    placeholder=\"Select Display\"\r\n                                    fluid\r\n                                    search\r\n                                    selection\r\n                                  options={regions}\r\n                                  value={this.state.selectedRegion}\r\n                                  onChange={this.onRegionSelected}\r\n                                />\r\n                            </Grid.Column>\r\n                            <Grid.Column width={4}>\r\n                                <a\r\n                                    className=\"ui teal left ribbon label\"\r\n                                    style={{ marginLeft: 15 }}\r\n                                >\r\n                                    State\r\n                </a>\r\n                                <Dropdown\r\n                                    placeholder=\"Select Display\"\r\n                                    fluid\r\n                                    search\r\n                                    selection\r\n                                  options={states}\r\n                                  value={this.state.selectedState}\r\n                                  onChange={this.onStateSelected}\r\n                                />\r\n                            </Grid.Column>\r\n                            <Grid.Column width={4}>\r\n                            <Label\r\n                    color=\"orange\"\r\n                    style={{ cursor: 'pointer', padding: '10px', marginTop: '26px' }}\r\n                    >\r\n                    View Details\r\n                                </Label>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                    <Segment\r\n            style={{\r\n              color: \"#808080\",\r\n              float: \"right\",\r\n              cursor: \"pointer\",\r\n              marginTop: -50,\r\n              display: \"inline-block\",\r\n              position: \"absolute\",\r\n              right: 25\r\n\r\n            }}\r\n          >\r\n            <Icon name=\"arrow\" className=\"left large\" color=\"brown\" onClick={this.onClose} />\r\n          </Segment>\r\n<div style={{padding:50}}>\r\n                    <ReactTable\r\n                        noDataText=\"We couldn't find anything\"\r\n                        data={this.state.list[0]}\r\n                        columns={columns}\r\n                        style={{ height: \"85%\", width: \"95%\", marginLeft: 30 }}\r\n                        filterable={true}\r\n                        defaultPageSize={20}\r\n                        sortable={true}\r\n\r\n                    />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nfunction AuditTableCell(props) {\r\n    function onClick() {\r\n        props.onClick(props.row);\r\n    }\r\n    return (\r\n        <div style={props.style} onClick={onClick} >\r\n            {props.text}\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        //reducer props to state\r\n        cannon: state.cannon\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators(\r\n        {\r\n            fetchAuditorsAction\r\n        },\r\n        dispatch\r\n    );\r\n};\r\n\r\n\r\nexport default withRouter(\r\n    connect(mapStateToProps, mapDispatchToProps)(CannonDrop)\r\n);","D:\\interview-app\\src\\index.js",[],["131","132"],"D:\\interview-app\\src\\Components\\SignUp.jsx",["133","134","135","136","137","138"],"import React from 'react';\r\nimport { Paper, withStyles, Grid, TextField, Button, FormControlLabel, Checkbox, Link, Avatar,Snackbar } from '@material-ui/core';\r\nimport { Face, Fingerprint,LockOutlined } from '@material-ui/icons';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { signup } from '../actions/user_action';\r\nimport { toast, SemanticToastContainer } from \"react-semantic-toasts\";\r\nconst styles = theme => ({\r\n  margin: {\r\n    margin: theme.spacing.unit * 2,\r\n  },\r\n  padding: {\r\n    padding: theme.spacing(8),\r\n    width: 280,\r\n    height: \"70vh\",\r\n    margin: \"40px auto\"\r\n  },\r\n});\r\n \r\n\r\nclass SignUp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      PageView:true,\r\n      email:\"\",\r\n      psw:\"\",\r\n      uname:\"\",\r\n      Cnpsw:\"\",\r\n      token:\"Saved\"\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(){\r\n    if(this.props.user.token === this.state.token){\r\n      this.props.history.push(\"/\")\r\n    }\r\n    }\r\n  username=(e)=>{\r\n    this.setState({\r\n      uname:e.target.value\r\n    })\r\n  }\r\n  email=(e)=>{\r\n    this.setState({\r\n      email:e.target.value\r\n    })\r\n  }\r\n  password=(e)=>{\r\n    this.setState({\r\n      psw:e.target.value\r\n    })\r\n  }\r\n  confirmPassword=(e)=>{\r\n    this.setState({\r\n      Cnpsw:e.target.value\r\n    })\r\n  }\r\n\r\nsignup=()=>{\r\nlet email = this.state.email;\r\nlet uname =this.state.uname;\r\nlet psw =this.state.psw;\r\nlet Cnpsw = this.state.Cnpsw;\r\nthis.props.signup(email,uname,psw,Cnpsw)\r\n}\r\n\r\n  handleClick=()=>{\r\n    this.props.history.push(\"/\")\r\n  }\r\n \r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n        <div>\r\n           \r\n      <Paper className={classes.padding} elevation={10}>\r\n      <SemanticToastContainer/>\r\n        <div className={classes.margin}>\r\n        <Grid align=\"center\" style={{marginTop:\"-40px\"}}>  \r\n             <Avatar style={{backgroundColor:\"gold\"}}><LockOutlined/></Avatar>\r\n             <h1>Sign-Up</h1>\r\n          </Grid>\r\n          <Grid container spacing={8} alignItems=\"flex-end\">  \r\n            <Grid item md={true} sm={true} xs={true}>\r\n              <TextField id=\"username\" label=\"Username\" type=\"text\" onChange={(e)=>this.username(e)} fullWidth autoFocus required />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={8} alignItems=\"flex-end\">  \r\n            <Grid item md={true} sm={true} xs={true}>\r\n              <TextField id=\"email\" label=\"Email\" type=\"email\" onChange={(e)=>this.email(e)} fullWidth autoFocus required />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={8} alignItems=\"flex-end\">\r\n            <Grid item md={true} sm={true} xs={true}>\r\n              <TextField id=\"password\" label=\"Password\" onChange={(e)=>this.password(e)} type=\"password\" fullWidth required />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={8} alignItems=\"flex-end\">\r\n            <Grid item md={true} sm={true} xs={true}>\r\n              <TextField id=\"password\" label=\"Confirm Password\"  onChange={(e)=>this.confirmPassword(e)} type=\"password\" fullWidth required />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container style={{marginTop:10}}>\r\n            <Grid item>\r\n              <Link onClick={this.handleClick} variant=\"body2\">\r\n                {\"Already Have a account? Sign In\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\" style={{ marginTop: '10px' }}>\r\n            <Button   variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }} onClick={this.signup}>SignUp</Button>\r\n          </Grid>\r\n        </div>\r\n      </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    //reducer props to state\r\n    user: state.user\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      signup\r\n      // actions\r\n    },\r\n    dispatch\r\n  );\r\n};\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SignUp)));","D:\\interview-app\\src\\reducers\\index.js",[],"D:\\interview-app\\src\\actions\\user_action.js",[],"D:\\interview-app\\src\\reducers\\user_reducer.js",["139","140"],"D:\\interview-app\\src\\config.js",[],"D:\\interview-app\\src\\Components\\SignIn.jsx",["141","142","143","144","145","146","147"],"import React from 'react';\nimport { Paper, withStyles, Grid, TextField, Button, FormControlLabel, Checkbox, Link, Avatar,Snackbar } from '@material-ui/core';\nimport { Face, Fingerprint,LockOutlined } from '@material-ui/icons';\nimport Page from './page.jsx';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { login } from '../actions/user_action';\nimport { toast, SemanticToastContainer } from \"react-semantic-toasts\";\nconst styles = theme => ({\n  margin: {\n    margin: theme.spacing(2),\n  },\n  padding: {\n    padding: theme.spacing(8),\n    width: 280,\n    height: \"70vh\",\n    margin: \"40px auto\"\n  }\n});\n \n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      PageView:true,\n      email:\"\",\n      psw:\"\",\n      token:\"login\"\n    }\n  }\n componentDidUpdate(){\n   if(this.state.token === this.props.user.token){\n    this.props.history.push(\"/page\")\n   }\n }\n\n  handleClick=()=>{\n    this.props.history.push(\"/signup\")\n  }\n  nextPage=()=>{\n    let email = this.state.email;\n    let psw = this.state.psw;\n    if(email && psw != null){\n    this.props.login(email,psw)\n    }\n   \n    \n  }\n  userName =e =>{\n    this.setState({\n      email:e.target.value\n    })\n  }\n  password =e =>{\n    this.setState({\n      psw:e.target.value\n    })\n  }\n  onClose=()=>{\n    this.setState({\n      PageView:true\n    })\n  }\n  render() {\n    const { classes } = this.props;\n    console.log(this.props.user.login,\"the valuess\")\n    return (\n      <div>\n         \n      <Paper className={classes.padding} elevation={10}>\n      <SemanticToastContainer /> \n        <div className={classes.margin}>\n        <Grid align=\"center\">  \n             <Avatar style={{backgroundColor:\"cyan\"}}><LockOutlined/></Avatar>\n             <h1>Sign-In</h1>\n          </Grid>\n          <Grid container spacing={8} alignItems=\"flex-end\">  \n            <Grid item md={true} sm={true} xs={true}>\n              <TextField id=\"username\" label=\"Username\" type=\"email\" onChange={(e)=>this.userName(e)} fullWidth autoFocus required />\n            </Grid>\n          </Grid>\n          <Grid container spacing={8} alignItems=\"flex-end\">\n            <Grid item md={true} sm={true} xs={true}>\n              <TextField id=\"password\" label=\"Password\" type=\"password\" onChange={(e)=>this.password(e)} fullWidth required />\n            </Grid>\n          </Grid>\n          <Grid container style={{marginTop:10}}>\n            <Grid item>\n              <Link onClick={this.handleClick} variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" style={{ marginTop: '10px' }}>\n            <Button variant=\"outlined\" color=\"primary\"  onClick={this.nextPage} style={{ textTransform: \"none\" }}>Login</Button>\n          </Grid>\n        </div>\n      </Paper>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    //reducer props to state\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      login\n      // actions\n    },\n    dispatch\n  );\n};\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SignIn)));","D:\\interview-app\\src\\Components\\page.jsx",["148","149","150","151","152","153","154","155","156","157","158","159","160","161"],"D:\\interview-app\\src\\actions\\Type.js",[],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":14,"column":1,"nodeType":"168","endLine":49,"endColumn":2},{"ruleId":"169","severity":1,"message":"170","line":16,"column":3,"nodeType":"171","messageId":"172","endLine":47,"endColumn":4},{"ruleId":"162","replacedBy":"173"},{"ruleId":"164","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":2,"column":13,"nodeType":"177","messageId":"178","endLine":2,"endColumn":22},{"ruleId":"162","replacedBy":"179"},{"ruleId":"164","replacedBy":"180"},{"ruleId":"162","replacedBy":"181"},{"ruleId":"164","replacedBy":"182"},{"ruleId":"175","severity":1,"message":"183","line":2,"column":10,"nodeType":"177","messageId":"178","endLine":2,"endColumn":16},{"ruleId":"175","severity":1,"message":"184","line":2,"column":24,"nodeType":"177","messageId":"178","endLine":2,"endColumn":29},{"ruleId":"175","severity":1,"message":"185","line":2,"column":55,"nodeType":"177","messageId":"178","endLine":2,"endColumn":63},{"ruleId":"175","severity":1,"message":"186","line":2,"column":65,"nodeType":"177","messageId":"178","endLine":2,"endColumn":73},{"ruleId":"175","severity":1,"message":"186","line":10,"column":5,"nodeType":"177","messageId":"178","endLine":10,"endColumn":13},{"ruleId":"175","severity":1,"message":"187","line":13,"column":5,"nodeType":"177","messageId":"178","endLine":13,"endColumn":14},{"ruleId":"175","severity":1,"message":"188","line":14,"column":5,"nodeType":"177","messageId":"178","endLine":14,"endColumn":9},{"ruleId":"175","severity":1,"message":"185","line":15,"column":5,"nodeType":"177","messageId":"178","endLine":15,"endColumn":13},{"ruleId":"175","severity":1,"message":"184","line":17,"column":5,"nodeType":"177","messageId":"178","endLine":17,"endColumn":10},{"ruleId":"175","severity":1,"message":"189","line":18,"column":5,"nodeType":"177","messageId":"178","endLine":18,"endColumn":17},{"ruleId":"175","severity":1,"message":"190","line":181,"column":13,"nodeType":"177","messageId":"178","endLine":181,"endColumn":19},{"ruleId":"175","severity":1,"message":"187","line":5,"column":3,"nodeType":"177","messageId":"178","endLine":5,"endColumn":12},{"ruleId":"175","severity":1,"message":"185","line":7,"column":3,"nodeType":"177","messageId":"178","endLine":7,"endColumn":11},{"ruleId":"175","severity":1,"message":"191","line":10,"column":3,"nodeType":"177","messageId":"178","endLine":10,"endColumn":8},{"ruleId":"175","severity":1,"message":"184","line":14,"column":3,"nodeType":"177","messageId":"178","endLine":14,"endColumn":8},{"ruleId":"175","severity":1,"message":"186","line":7,"column":5,"nodeType":"177","messageId":"178","endLine":7,"endColumn":13},{"ruleId":"175","severity":1,"message":"192","line":8,"column":5,"nodeType":"177","messageId":"178","endLine":8,"endColumn":11},{"ruleId":"193","severity":1,"message":"194","line":91,"column":19,"nodeType":"195","messageId":"196","endLine":91,"endColumn":21},{"ruleId":"197","severity":1,"message":"198","line":180,"column":33,"nodeType":"199","endLine":183,"endColumn":34},{"ruleId":"197","severity":1,"message":"198","line":197,"column":33,"nodeType":"199","endLine":200,"endColumn":34},{"ruleId":"162","replacedBy":"200"},{"ruleId":"164","replacedBy":"201"},{"ruleId":"175","severity":1,"message":"202","line":2,"column":54,"nodeType":"177","messageId":"178","endLine":2,"endColumn":70},{"ruleId":"175","severity":1,"message":"186","line":2,"column":72,"nodeType":"177","messageId":"178","endLine":2,"endColumn":80},{"ruleId":"175","severity":1,"message":"203","line":2,"column":95,"nodeType":"177","messageId":"178","endLine":2,"endColumn":103},{"ruleId":"175","severity":1,"message":"204","line":3,"column":10,"nodeType":"177","messageId":"178","endLine":3,"endColumn":14},{"ruleId":"175","severity":1,"message":"205","line":3,"column":16,"nodeType":"177","messageId":"178","endLine":3,"endColumn":27},{"ruleId":"175","severity":1,"message":"206","line":8,"column":10,"nodeType":"177","messageId":"178","endLine":8,"endColumn":15},{"ruleId":"166","severity":1,"message":"167","line":15,"column":1,"nodeType":"168","endLine":66,"endColumn":2},{"ruleId":"169","severity":1,"message":"170","line":17,"column":3,"nodeType":"171","messageId":"172","endLine":64,"endColumn":4},{"ruleId":"175","severity":1,"message":"202","line":2,"column":54,"nodeType":"177","messageId":"178","endLine":2,"endColumn":70},{"ruleId":"175","severity":1,"message":"186","line":2,"column":72,"nodeType":"177","messageId":"178","endLine":2,"endColumn":80},{"ruleId":"175","severity":1,"message":"203","line":2,"column":95,"nodeType":"177","messageId":"178","endLine":2,"endColumn":103},{"ruleId":"175","severity":1,"message":"204","line":3,"column":10,"nodeType":"177","messageId":"178","endLine":3,"endColumn":14},{"ruleId":"175","severity":1,"message":"205","line":3,"column":16,"nodeType":"177","messageId":"178","endLine":3,"endColumn":27},{"ruleId":"175","severity":1,"message":"207","line":4,"column":8,"nodeType":"177","messageId":"178","endLine":4,"endColumn":12},{"ruleId":"175","severity":1,"message":"206","line":9,"column":10,"nodeType":"177","messageId":"178","endLine":9,"endColumn":15},{"ruleId":"175","severity":1,"message":"208","line":2,"column":10,"nodeType":"177","messageId":"178","endLine":2,"endColumn":15},{"ruleId":"175","severity":1,"message":"188","line":2,"column":29,"nodeType":"177","messageId":"178","endLine":2,"endColumn":33},{"ruleId":"175","severity":1,"message":"202","line":2,"column":54,"nodeType":"177","messageId":"178","endLine":2,"endColumn":70},{"ruleId":"175","severity":1,"message":"186","line":2,"column":72,"nodeType":"177","messageId":"178","endLine":2,"endColumn":80},{"ruleId":"175","severity":1,"message":"209","line":2,"column":82,"nodeType":"177","messageId":"178","endLine":2,"endColumn":86},{"ruleId":"175","severity":1,"message":"210","line":2,"column":155,"nodeType":"177","messageId":"178","endLine":2,"endColumn":159},{"ruleId":"175","severity":1,"message":"205","line":3,"column":16,"nodeType":"177","messageId":"178","endLine":3,"endColumn":27},{"ruleId":"175","severity":1,"message":"211","line":3,"column":28,"nodeType":"177","messageId":"178","endLine":3,"endColumn":40},{"ruleId":"175","severity":1,"message":"212","line":3,"column":54,"nodeType":"177","messageId":"178","endLine":3,"endColumn":69},{"ruleId":"213","severity":1,"message":"214","line":109,"column":25,"nodeType":"215","messageId":"216","endLine":109,"endColumn":27},{"ruleId":"193","severity":1,"message":"194","line":110,"column":33,"nodeType":"195","messageId":"196","endLine":110,"endColumn":35},{"ruleId":"213","severity":1,"message":"214","line":242,"column":23,"nodeType":"215","messageId":"216","endLine":242,"endColumn":25},{"ruleId":"213","severity":1,"message":"214","line":244,"column":26,"nodeType":"215","messageId":"216","endLine":244,"endColumn":28},{"ruleId":"217","severity":1,"message":"218","line":246,"column":3,"nodeType":"199","endLine":246,"endColumn":34},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["219"],["220"],"no-unused-vars","'FileSaver' is defined but never used.","Identifier","unusedVar",["219"],["220"],["219"],["220"],"'Header' is defined but never used.","'Image' is defined but never used.","'Dropdown' is defined but never used.","'Checkbox' is defined but never used.","'Statistic' is defined but never used.","'Grid' is defined but never used.","'ModalActions' is defined but never used.","'stores' is assigned a value but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["219"],["220"],"'FormControlLabel' is defined but never used.","'Snackbar' is defined but never used.","'Face' is defined but never used.","'Fingerprint' is defined but never used.","'toast' is defined but never used.","'Page' is defined but never used.","'Paper' is defined but never used.","'Link' is defined but never used.","'Icon' is defined but never used.","'LockOutlined' is defined but never used.","'ThreeSixtySharp' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]